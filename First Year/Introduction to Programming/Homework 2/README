CAULEA GHEORGHITA 314CB
Task1
	Rezolvarea incepe prin construirea unui set de 3 functii menite sa usureze efectuarea operatiilor. Prima fununctie, strdel, sterge un numar setat de caractere dintr-o fraza, incepand cu o pozitie data. Functia str_length calculeaza lungimea unui sir de caractere. Este identica cu strlen. Cea de-a treia functie, strins, insereaza un cuvant dar pe o pozitie data in sir. Prima operatie notatata cu f1, este realizata cu ajutorul unei functii care parcurge sirul, cu conditii de separator si in cazul in care o secventa este identica cu cea cautata, delimitata si de separatori, o numara. A doua operatie este reprezentata de functia f2. Are la baza f1, doar ca in momentul in care am gasit secventa dorita, vom insera cu ajutorul functie strins noua secventa, pe cea veche o vom elimina prin folosirea functiei strdel. Operatia 3, este realizata de functia f3. Ceea ce face ea este sa caute o secventa delimitata de separatori, considerata cuvant, iar apoi o roteste la dreapta k ori. Pentru optimizarea k-ul va fi numarul de rotiri modulo lungimea secventei. In main, aloc dinamic memorie pentru tabloul cu n elemente, siruri de caractere, si pentru argumentele operatiilor apoi citesc numarul de operatii. Pentru fiecare operatie ma ajut de functia necesara si afisez un mesaj corespunzator. O problema intervine cand la operatia 2, inlocuind cu un cuvant mai lung depasesc cele 12000 de caractere alocate. In acest caz am facut o realocare a memoriei. In final eliberez memoria.

Task2
	Rezolvarea incepe prin realizarea a doua functii ajutatoare. Prima functie este nr_cuv care numara toata cuvintele ce apar intr-un sir dat. Cea de-a doua functie calculeaza distanta dintre doua cuvinte. Distanta este o valoare corespunzatoare diferentei de cod ASCII. Daca cele doua cuvinte nu au un numar egal de litere, restul de litere ramas va face distanta cu 0. In main, aloc dinamic memorie pentru cele doua texte, pentru listele de cuvinte, pentru listele de aparitii si pentru ajutoare, p si caux. Se parcurge fiicare text si se extrag cuvintele. Un cuvant extras, care nu a aparut in lista de cuvinte, este introdus iar numarul sau de aparitii, este initializat cu 1. Daca acel cuvant figureaza ca a mai aparul, se mareste numarul de aparitii cu 1. In urma acestei operatii vom obtine doua liste de cuvinte si cele doua liste de aparitii ale cuvintelor. Cu ajutorul metodei bubble sort vom sorta cele doua liste de cuvinte si listele de apritii corespunzatoare dupa lungimea cuvintelor descrescator, si crescator dupa cuvant. Fiind sortate, cele doua liste de cuvinte si listele de aparitii sunt parcurse pana la minimul lungimii uneia dintre ele si se face suma distantelor cuvintelor ce apar pe pozitii identice in cele doua liste de cuvinte inmultita cu suma numarului de aparitii ale celor doua cuvinte. Sumei ii este adaugat diferenta absoluta a lungimii celor doua liste inmultita cu 100. Se afiseaza valoarea obtinuta. In final se elibereaza memoria alocata.
