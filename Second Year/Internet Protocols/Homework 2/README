STUDENT: Caulea Gheorghita
GRUPA: 324 CB
Observatii: 1. Am implementat tema integral, cu exceptia comenzii 'UNLOCK'.
			2. Am inceput implentarea temei pornind de la scheletul dat in cadrul laboratorului 8("TCP. Multiplexare I/O"). 
			3. Am implemetat comanda 'login' pornind de la ideea ca un card se va bloca la trei incercari de introducere pin        			   gresite consecutive pentru acel card(contorul de incercari gresite corespunzator unui card nu se va reseta la 
               actiunile pe carduri).
Mentiuni: Atasez fisierul "client-2005.log" din care rezultata implementarea realizata pentru 'login'.(Reusita unui card nu reseteaza 		  	  incercariele nereusita ale celorlalte carduri).

	In inceputul implementarii pentru fiecare CLIENT se va crea numele fisierului sau de 'log' si se va deschide acest fisier in vederea scrierii comenzilor introduse de catre acesta si raspunsul primit de la server. Se deschide un socket, se retine descriptorul. Se vor seta adresele. Daca va sosi ceva pe descriptorul '0', cel corespunzator 'stdin' voi sti ca am citit ceva de la tastatura deci in consecinta ca un client a tastat o comanda. Am stabilit in implementare coduri pentru fiecare comanda pentru a-mi usura munca(1-login, 2-logout, 3-listsold, 4-getmonet si 5-putmoney). In consecinta, daca am citit ceva de la tastatura, parsez pana la primul space si folosind 'strcmp' verific ce comanda a fost introdusa. Daca a fost introdusa comanda 'login' si variabila care ma anunta de existenta altei sesiuni deschise este '1', afisez direct eroarea si nu trimit nimic catre server. In caz contrar, setez codul de comanda, contruiesc si trimit serverului un mesaj ce contine numele comenzii, numarul cardului si pinul. Daca a fost introdusa comanda 'quit', instiintez serverul de intentia de inchidere a sesiunii, inchid fisierul de log, sesiunea si programul. Daca a fost introdusa comanda 'logout' se verifica daca exista o sesiune deschisa, in caz contrar comanda nu mai este trimisa catre server. In caz pozitiv, se seteaza codul comenzii si variabila ce anunta inchiderea conexiunii(sw), construiesc un mesaj cu numele comenzii, numarul cardului si pin-ul si il trimit serverului. Daca a fost introdusa comanda 'listsold' se verifica daca exista o sesiune deschisa, in caz contrar comanda nu mai este trimisa catre server. In caz pozitiv, se seteaza codul comenzii, se contruieste un mesaj care include numele comenzii, numarul cardului si pin-ul si se trimite catre server. Numarul cardului si pin-ul se garanteaza ca sunt valide deoarece se seteaza atunci cand raspunsul serverului este 'WELCOME...'. Daca a fost introdusa comanda 'getmoney' se verifica daca exista o sesiune deschisa, in caz contrar comanda nu mai este trimisa catre server. In caz pozitiv, se seteaza codul comenzii, se memoreaza suma ceruta pentru a sti ce se va scrie in fiserul de log, se contruieste mesajul dupa acelasi principiu si se trimite catre server. Daca a fost introdusa comanda 'putmoney' se verifica daca exista o sesiune deschisa, in caz contrar comanda nu mai este trimisa catre server. In caz pozitiv, se seteaza codul comenzii, se memoreaza suma depusa se construieste un mesaj si se trimite la server. Daca se primeste ceva pe socket, in functie de codul comenzii voi sti ce sa afisez in consola, respectiv sa scriu in fisier. La final inchid fisierul si socketul.
	In SERVER creez o structura pentru CLIENT care voi retine date pentru fiecare client(nume, prenume, numar_card, pin, parola, sold si alte campuri ce ma ajuta in omplementare: open - imi spune daca sesiunea este deschisa pentru clientul respectiv, blocat - imi spune daca respectivul client este blocat si try - imi spune numarul de incercari esuate pentru fiecare client). Declar si initializez variabile ce ma vor ajuta pe parcursul implementarii. Deschid fisierul pentru citirea datelor pentru fiecare client si initailizez cu aceasta ocazia si campurile 'open', 'blocat' si 'try'. Deschid un socket si setez adresele. In momentul sosirii a unei informatii pe un socket activ, in cazul in care trece acceptul, adaug noul socket in multimea descriptorilor si setez valoarea 1 in vectorul de socketi construit(vector ce memoreaza socketii deschisi). In cazul in care se primeste informatie de la 'stdin', voi verifica daca este vorba de o comanda 'quit'. In caz pozitiv, voi parcurge vectorul de descriptori deschisi, voi trimite un mesaj corespunzator catre fiecare, ii voi scoate din lista de descriptori si voi inchide conexiunea. In cazul in care primesc ceva pe un socket activ, fara a fi vorba de 'stdin', parsez informatia in vederea obtinerii comenzii trimise. Daca este o comanda 'login', parsez din buffer numarul de card si pinul. Verific in vectorul de clienti daca credentialele trimise sunt valide si afisez mesaje corespunzatoare pentru fiecare caz. Daca este o comanda 'quit', voi avea in vedere sa verific daca acel client de pe acel socket a avut o sesiune deschisa in caz pozitiv il voi deloga si mai apoi ii voi inchide socketul. Daca este o comanda 'logout', voi cauta in vectorul de clienti clientul corespunzator numarului de card si pin-ului. Ii voi inchide sesiunea si ii voi trimite un mesaj corespunzator. Daca este o comanda 'listsold', identific clientul dupa numarul de card si pin, parsate din bufferul primit si trimit un mesaj corespunzator pentru client. Daca este o comanda 'getmoney', verific conditiile de validitate a acestei comenzi si retrimit catre client un mesaj corespunzator. Daca este o comanda 'putmoney' execut comanda si trimit catre client un mesaj corespunzator. In ambele cazuri caut clientul in lista de clienti cu numarul de card si pin-ul parsate din bufferul primit. 

